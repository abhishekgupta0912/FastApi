version: 0.2

phases:
  install:
    commands:
      - echo "ye install stage hai "
  pre_build:
    commands:
      - echo "Hello Abhishek all is good :)"
    #   - wget https://github.com/aquasecurity/trivy/releases/download/v0.36.1/trivy_0.36.1_Linux-64bit.deb
    #   - sudo dpkg -i trivy_0.36.1_Linux-64bit.deb
    #   - aws s3 cp s3://owasp-zap-bucket/html.tpl .
    #   - trivy image --format template --template "@./html.tpl" -o /tmp/trivy.html golang:1.12-alpine 
    #   - aws s3 cp /tmp/trivy.html s3://owasp-zap-bucket
  build:
    commands:
      - echo "Hi Abhishek here is all good :) !!"

  post_build:
    commands:
    #   - cd /etc/yum.repos.d/
    #   - wget https://download.opensuse.org/repositories/home:cabelo/CentOS_7/home:cabelo.repo
    #   - yum install owasp-zap -y
    #   - /usr/share/owasp-zap/zap.sh -cmd -quickurl https://devapi.geminisolutions.com/leavemgmt -quickprogress -quickout /tmp/resultleave.html
    #   - chmod 777 $PWD
    #   - mkdir -p /zap/wrk
    #   - chmod 777 /zap/wrk
    #   - docker run -v /zap/wrk/:/zap/wrk/:rw -t owasp/zap2docker-stable zap-full-scan.py -t https://eapi.geminisolutions.com/atsApplicantSvc -r /zap/wrk/ats.html
      - aws s3 cp s3://owasp-zap-bucket/zap.sh .
      - chmod +x ./zap.sh
      - ./zap.sh 'https://eapi.geminisolutions.com/atsApplicantSvc'
      - ls /zap/wrk
      - aws s3 cp /zap/wrk/${REPO_NAME}_${BRANCH}_${CODEBUILD_BUILD_NUMBER}_zap.html.html s3://owasp-zap-bucket/zap_folder/
